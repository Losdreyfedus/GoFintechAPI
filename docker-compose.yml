services:
  app:
    build: .
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - "DATABASE_URL=sqlserver://as:Test123!@db:1433?database=gofintech&encrypt=disable&TrustServerCertificate=true"
      - REDIS_URL=redis://redis:6379
      - ENVIRONMENT=development
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
      - JAEGER_URL=http://jaeger:14268/api/traces
      - RATE_LIMIT_PER_MINUTE=100
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - app-network

  db:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      - ACCEPT_EULA=Y
      - "SA_PASSWORD=Test123!"
      - MSSQL_PID=Developer
      - MSSQL_AGENT_ENABLED=true
    healthcheck:
      test: ["CMD-SHELL", "timeout 5 bash -c '</dev/tcp/127.0.0.1/1433'"]
      interval: 10s
      timeout: 5s
      retries: 30
    ports:
      - "1434:1433"
    volumes:
      - mssql_data:/var/opt/mssql
    networks:
      - app-network

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - app-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - app-network

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"  # UI
      - "14268:14268"  # HTTP collector
      - "14250:14250"  # gRPC collector
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - COLLECTOR_HTTP_SERVER_HOST=0.0.0.0
    networks:
      - app-network

volumes:
  mssql_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  app-network:
    driver: bridge 